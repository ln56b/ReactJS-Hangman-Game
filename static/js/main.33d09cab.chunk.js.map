{"version":3,"sources":["assets/step0.jpg","assets/step1.jpg","assets/step2.jpg","assets/step3.jpg","assets/step4.jpg","assets/step5.jpg","assets/step6.jpg","assets/step7.jpg","assets/step8.jpg","assets/step9.jpg","assets/step10.jpg","assets/fireworks.jpg","assets/crows.jpg","components/Figure.jsx","components/Header.jsx","components/Keyboard.jsx","components/ResetGame.jsx","components/Word.jsx","components/WrongGuesses.jsx","components/Game.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","IMAGES","step0","step1","step2","step3","step4","step5","step6","step7","step8","step9","step10","Figure","errorCount","isWinner","correctFigure","crows","fireworks","find","_","index","className","src","alt","Header","isLoser","guessedLetters","hiddenWord","correctSentence","length","ALPHABET","split","Keyboard","handleGuess","wrongLetters","isPlayable","handleClick","e","target","value","map","letter","key","onClick","disabled","includes","ResetGame","resetGame","Word","generateRandomWord","WrongGuesses","WORDS","Game","useState","setHiddenWord","setGuessedLetters","setWrongLetters","setErrorCount","setIsWinner","setIsLoser","setIsPlayable","useEffect","Fragment","newWord","Math","floor","random","toUpperCase","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.33d09cab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/step0.f06df755.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step1.ca6c10d5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step2.1dc76568.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step3.837148ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step4.db9097e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step5.fbff4784.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step6.c4ea9528.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step7.62a781c8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step8.0f8ca81e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step9.1b557aa7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step10.c80394c2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fireworks.aff1a035.jpg\";","module.exports = __webpack_public_path__ + \"static/media/crows.32155cd3.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport step0 from '../assets/step0.jpg';\nimport step1 from '../assets/step1.jpg';\nimport step2 from '../assets/step2.jpg';\nimport step3 from '../assets/step3.jpg';\nimport step4 from '../assets/step4.jpg';\nimport step5 from '../assets/step5.jpg';\nimport step6 from '../assets/step6.jpg';\nimport step7 from '../assets/step7.jpg';\nimport step8 from '../assets/step8.jpg';\nimport step9 from '../assets/step9.jpg';\nimport step10 from '../assets/step10.jpg';\nimport fireworks from '../assets/fireworks.jpg';\nimport crows from '../assets/crows.jpg';\n\nconst MAX_ERRORS = 10;\nconst IMAGES = [step0, step1, step2, step3, step4, step5, step6, step7, step8, step9, step10];\n\nfunction Figure({ errorCount, isWinner }) {\n\n  const correctFigure = (errorCount === MAX_ERRORS) ? crows : (isWinner) ? fireworks : IMAGES.find((_, index) => index === errorCount);\n\n  return (\n    <div className=\"figure\">\n      <img src={correctFigure} alt=\"hangman\" />\n    </div>\n  );\n}\n\nFigure.propTypes = {\n  errorCount: PropTypes.number.isRequired,\n  isWinner: PropTypes.bool.isRequired,\n}\n\nexport default Figure;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst WINNER_TEXT = 'Well done old pal, you won !';\nconst LOSER_TEXT = 'You lost. The hidden word was ';\nconst START_TEXT = 'Guess the word...or DIE';\nconst GAME_TEXT = 'Pay attention, this is a dangerous World';\n\n\nfunction Header({ isWinner, isLoser, guessedLetters, hiddenWord }) {\n\n  const correctSentence =\n    (isWinner)\n      ? WINNER_TEXT\n      : (isLoser)\n        ? LOSER_TEXT + hiddenWord\n        : (guessedLetters.length !== hiddenWord.length)\n          ? GAME_TEXT\n          : (!hiddenWord.length)\n            ? START_TEXT\n            : ''\n\n  return (\n    < div className=\"header\" >\n      <h1>Hangman Game</h1>\n      <h2>{correctSentence}</h2>\n    </div >\n  )\n}\n\nHeader.propTypes = {\n  isWinner: PropTypes.bool.isRequired,\n  isLoser: PropTypes.bool.isRequired,\n  guessedLetters: PropTypes.array.isRequired,\n  hiddenWord: PropTypes.string.isRequired,\n}\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ALPHABET = \"ABCDEFGHIJKLMNOPRSTUVWXYZ\".split('');\n\n\nfunction Keyboard({ handleGuess, guessedLetters, wrongLetters, isPlayable }) {\n\n  function handleClick(e) {\n    handleGuess(e.target.value)\n  }\n\n  return (\n    <div className=\"keyboard\">\n      {ALPHABET.map((letter, index) => isPlayable ?\n        <button key={index} onClick={handleClick} value={letter} disabled={guessedLetters.includes(letter) || wrongLetters.includes(letter) ? true : false}>{letter}</button> : null\n      )}\n    </div>\n  )\n}\n\nKeyboard.propTypes = {\n  handleGuess: PropTypes.func.isRequired,\n  guessedLetters: PropTypes.array.isRequired,\n  wrongLetters: PropTypes.array.isRequired,\n  isPlayable: PropTypes.bool.isRequired,\n}\n\nexport default Keyboard;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nfunction ResetGame({ hiddenWord, isPlayable, resetGame }) {\n  return (\n    <div className=\"reset-game\">\n      {!isPlayable && hiddenWord.length ? <button onClick={resetGame}>Play again</button> : null\n      }\n    </div>\n  );\n}\n\nResetGame.propTypes = {\n  hiddenWord: PropTypes.string.isRequired,\n  isPlayable: PropTypes.bool.isRequired,\n  resetGame: PropTypes.func.isRequired\n}\n\nexport default ResetGame;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Word({ generateRandomWord, hiddenWord, guessedLetters }) {\n  return (\n    <div className=\"word\" >\n      {\n        !hiddenWord.length ?\n          <button onClick={generateRandomWord}>Generate word</button>\n          : null\n      }\n      <div className=\"word-display\">\n        {hiddenWord.split('').map((letter, index) =>\n          <h4 key={index}>\n            {guessedLetters.includes(letter) ? letter : '_'}\n          </h4>\n        )}\n      </div>\n    </div >\n  )\n}\n\nWord.propTypes = {\n  generateRandomWord: PropTypes.func.isRequired,\n  hiddenWord: PropTypes.string.isRequired,\n  guessedLetters: PropTypes.array.isRequired\n}\n\nexport default Word;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nconst MAX_ERRORS = 10;\n\nfunction WrongGuesses({ errorCount }) {\n\n  return (\n    <div className=\"wrong-guesses\">\n      <h4>Wrong guesses</h4>\n      <h3>{errorCount} / {MAX_ERRORS} </h3>\n    </div>\n  )\n}\n\nWrongGuesses.propTypes = {\n  errorCount: PropTypes.number.isRequired\n}\n\nexport default WrongGuesses;","import React, { useState, useEffect } from 'react';\nimport Figure from './Figure';\nimport Header from './Header';\nimport Keyboard from './Keyboard';\nimport ResetGame from './ResetGame';\nimport Word from './Word';\nimport WrongGuesses from './WrongGuesses';\n\nconst MAX_ERRORS = 10;\nconst WORDS = ['almond', 'apricot', 'cashew', 'date', 'fig', 'fruit', 'grape', 'hazelnut', 'leaf', 'lemon', 'melon', 'olive', 'peach'];\n\n\nfunction Game() {\n\n  const [hiddenWord, setHiddenWord] = useState('');\n  const [guessedLetters, setGuessedLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [errorCount, setErrorCount] = useState(0);\n  const [isWinner, setIsWinner] = useState(false);\n  const [isLoser, setIsLoser] = useState(false);\n  const [isPlayable, setIsPlayable] = useState(false);\n\n\n  useEffect(() => {\n    checkGameScore()\n  })\n\n  function checkGameScore() {\n    if (hiddenWord !== '') {\n      if (hiddenWord.length === guessedLetters.length) {\n        setIsPlayable(false)\n        setIsWinner(true)\n      }\n      else if (errorCount === MAX_ERRORS) {\n        setIsLoser(true)\n        setIsPlayable(false)\n      }\n    }\n  }\n\n  function generateRandomWord() {\n    let newWord = WORDS[Math.floor(Math.random() * WORDS.length)].toUpperCase();\n    setHiddenWord(newWord);\n    setIsPlayable(true)\n    return newWord;\n  }\n\n\n  function handleGuess(letter) {\n    if (hiddenWord.includes(letter)) {\n      setGuessedLetters(() => [...guessedLetters, letter])\n    } else {\n      setWrongLetters(() => [...wrongLetters, letter])\n      setErrorCount(errorCount + 1)\n    }\n  }\n\n  function resetGame() {\n    setHiddenWord('')\n    setGuessedLetters([])\n    setWrongLetters([])\n    setErrorCount(0)\n    setIsWinner(false)\n    setIsLoser(false)\n    setIsPlayable(false)\n  }\n\n  return (\n    <React.Fragment>\n      <Header isWinner={isWinner} isLoser={isLoser} guessedLetters={guessedLetters} hiddenWord={hiddenWord} />\n      <ResetGame hiddenWord={hiddenWord} isPlayable={isPlayable} resetGame={resetGame} />\n      <Figure errorCount={errorCount} isWinner={isWinner} />\n      <Keyboard handleGuess={handleGuess} isPlayable={isPlayable} guessedLetters={guessedLetters} wrongLetters={wrongLetters} />\n      <WrongGuesses errorCount={errorCount} />\n      <Word generateRandomWord={generateRandomWord} hiddenWord={hiddenWord} guessedLetters={guessedLetters} />\n    </React.Fragment >\n  );\n}\n\nexport default Game;","import React from 'react';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"main-container\" >\n      <Game />\n    </div>\n\n  );\n}\n\nexport default App;\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}